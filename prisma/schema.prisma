generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Collection {
  id                      Int       @id @default(autoincrement())
  name                    String
  max_items               Int
  max_batch_size          Int
  symbol                  String
  creator_address         String
  is_hidden               Boolean
  sort_order              Int
  is_mint_active          Boolean
  is_archetype            Boolean
  is_pending              Boolean
  discounts               String // JSON serialized as a string
  owner_alt_payout        String
  super_affiliate_payout  String
  contract_version        Int
  slug                    String
  mint_info               String // JSON serialized as a string
  socials                 String // JSON serialized as a string
  token_address           String
  token_address_lowercase String
  trait_counts            String // JSON serialized as a string
  avatar_uri              String
  banner_uri              String
  description             String
  hero_uri                String
  twitter                 String
  website                 String
  discord                 String
  num_items               Int
  num_owners              Int
  created_at              DateTime
  updated_at              DateTime
  last_refreshed          DateTime
  MintData                MintData?
  Creator                 Users     @relation(fields: [userId], references: [id])
  userId                  Int       @unique
  Nfts                    Nft[]
}

model Nft {
  id                      Int         @id @default(autoincrement())
  token_address           String
  token_address_lowercase String
  token_id                String
  attributes              String // JSON serialized as a string
  block_minted            Int
  contract_type           String
  description             String
  dna                     String
  edition                 Int
  image                   String
  image_url               String
  metadata                String // JSON serialized as a string
  name                    String
  network                 String
  old_image_url           String
  old_token_uri           String
  owner_of                String
  token_id_int            Int
  token_uri               String
  created_at              DateTime
  updated_at              DateTime
  OpenRarity              OpenRarity?
  Collection              Collection  @relation(fields: [collectionId], references: [id])
  collectionId            Int
}

model MintData {
  id                  Int        @id @default(autoincrement())
  block_last_mint     Int
  date_last_mint      DateTime
  mints_last_1h       Int
  mints_last_12h      Int
  mints_last_24h      Int
  mints_last_7d       Int
  mints_last_1m       Int
  mints_last_6m       Int
  floor_price_raw     String
  floor_price_decimal Float
  all_time_raw        String
  all_time_decimal    Float
  last_12h_decimal    Float
  last_1h_decimal     Float
  last_24h_decimal    Float
  last_7d_decimal     Float
  last_1m_decimal     Float
  last_6m_decimal     Float
  date_last_sale      DateTime
  updated_at          DateTime
  Collection          Collection @relation(fields: [collectionId], references: [id])
  collectionId        Int        @unique
}

model OpenRarity {
  id                Int   @id @default(autoincrement())
  rank              Int
  score             Float
  unique_attributes Int
  Nft               Nft   @relation(fields: [nftId], references: [id])
  nftId             Int   @unique
}

model Users {
  id                Int          @id @default(autoincrement())
  address           String       @unique
  address_lowercase String
  token             String
  avatar_uri        String
  banner_uri        String
  description       String
  username          String
  ens               String
  joined_time       DateTime
  nonce             Int
  Collections       Collection[]
}

model MintSaleTransactions {
  id               Int      @id @default(autoincrement())
  transaction_hash String
  block_number     Int
  timestamp        DateTime
  token_address    String
  value_decimal    Float
  value_raw        String
  from             String
}

model InstarevealCollections {
  id      Int    @id @default(autoincrement())
  address String
  paths   String // JSON serialized as a string
}

model Referrals {
  id                  Int      @id @default(autoincrement())
  collection_address  String
  referral_amount_eth String
  referral_amount_wei String
  affiliate           String
  transaction_hash    String
  minter_ens          String
  txn_value           String
  date                DateTime
  block_number        Int
  affiliate_ens       String
}
